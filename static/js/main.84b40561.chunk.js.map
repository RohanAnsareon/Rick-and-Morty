{"version":3,"sources":["theming/default.theme.js","assets/rick.png","assets/morty.png","components/Header.js","components/NoMatch.js","utils/CollapsibleTable/Row.jsx","utils/CollapsibleTable/Table.jsx","reducers/CommonReducer.jsx","components/SearchBar.jsx","components/CharacterList.jsx","components/LocationList.js","components/EpisodeList.jsx","App.js","reportWebVitals.js","index.js"],"names":["theme","responsiveFontSizes","createMuiTheme","props","MuiButtonBase","disableRipple","palette","primary","main","secondary","useHeaderStyles","makeStyles","header","backgroundColor","display","alignItems","justifyContent","padding","imgMorty","width","imgRick","Header","classes","className","src","morty","alt","ButtonGroup","variant","color","aria-label","Button","component","Link","to","rick","NoMatch","useRowStyles","root","borderBottom","Row","columns","row","React","useState","open","setOpen","Fragment","TableRow","TableCell","IconButton","size","onClick","map","col","index","align","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","gutterBottom","CollapsibleTable","rows","TableContainer","Paper","maxHeight","Table","stickyHeader","TableHead","toUpperCase","TableBody","reducer","state","action","type","payload","filter","item","propertyName","includes","Error","useSearchBarStyles","container","control","SearchBar","dispatch","searchText","setSearchText","searchColumn","setSearchColumn","search","event","preventDefault","onSubmit","DeleteOutline","TextField","placeholder","onChange","target","value","FormControl","Select","displayEmpty","MenuItem","useCharacterListStyles","content","flexDirection","CharacterList","setRows","useReducer","characterList","useEffect","axios","get","environment","baseUrl","then","response","data","results","character","name","status","species","gender","origin","location","image","created","Date","toDateString","catch","err","console","log","useLocationListStyles","createLocation","dimension","LocationList","locationList","useEpisodeListStyles","createEpisode","air_date","episode","EpisodeList","episodeList","App","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84b40561.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core';\r\n\r\nconst theme = responsiveFontSizes(createMuiTheme({\r\n    props: {\r\n        MuiButtonBase: {\r\n            disableRipple: true\r\n        }\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: '#D9b48FFF'\r\n        },\r\n        secondary: {\r\n            main: '#D9b48FFF'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default theme;","export default __webpack_public_path__ + \"static/media/rick.ddf093bf.png\";","export default __webpack_public_path__ + \"static/media/morty.fc6030c8.png\";","import React from \"react\";\r\nimport rick from \"../assets/rick.png\";\r\nimport morty from \"../assets/morty.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Button, ButtonGroup, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useHeaderStyles = makeStyles({\r\n  header: {\r\n    backgroundColor: '#D9b48FFF',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: '10px 30px'\r\n  },\r\n  imgMorty: {\r\n    width: '7%'\r\n  },\r\n  imgRick: {\r\n    width: '8%'\r\n  }\r\n})\r\n\r\nconst Header = () => {\r\n  const classes = useHeaderStyles();\r\n\r\n  return (\r\n    <div className={classes.header}>\r\n      <img className={classes.imgMorty} src={morty} alt=\"Morty\" />\r\n\r\n      <ButtonGroup variant=\"text\" color=\"inherit\" aria-label=\"text primary button group\">\r\n        <Button component={Link} to=\"/character\">Characters</Button>\r\n        <Button component={Link} to=\"/location\">Locations</Button>\r\n        <Button component={Link} to=\"/episode\">Episodes</Button>\r\n      </ButtonGroup>\r\n\r\n      <img className={classes.imgRick} src={rick} alt=\"Rick\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst NoMatch = () => {\r\n  return <h1>There is not any spesific page for your url!</h1>;\r\n};\r\n\r\nexport default NoMatch;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    \"& > *\": {\r\n      borderBottom: \"unset\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Row = (props) => {\r\n  const { columns, row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        {columns.map((col, index) => (\r\n          <TableCell key={index} align=\"left\">\r\n            {row[col]}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                {row[columns[0]]}\r\n              </Typography>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Row from \"./Row\";\r\n\r\nconst CollapsibleTable = (props) => {\r\n  const { columns, rows } = props;\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ maxHeight: \"75vh\" }}>\r\n      <Table aria-label=\"collapsible table\" stickyHeader>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            {columns.map((col, index) => (\r\n              <TableCell key={index} align=\"left\">\r\n                {col.toUpperCase()}\r\n              </TableCell>\r\n            ))}\r\n            {/* <TableCell>Dessert (100g serving)</TableCell>\r\n                <TableCell align=\"right\">Calories</TableCell>\r\n                <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                <TableCell align=\"right\">Protein&nbsp;(g)</TableCell> */}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <Row key={index} row={row} columns={columns} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default CollapsibleTable;\r\n","const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'append':\r\n            return [...state, ...action.payload];\r\n        case 'clear':\r\n            return [];\r\n        case 'filter':\r\n            return action.rows.filter(item => {\r\n                return item[action.propertyName].toUpperCase().includes(action.payload.toUpperCase())\r\n            });\r\n        default:\r\n            throw new Error('Wrong action type!');\r\n    }\r\n}\r\n\r\nexport default reducer; ","import { Button, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { TextField, FormControl, Select, MenuItem } from \"@material-ui/core\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\n\r\nconst useSearchBarStyles = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: 20,\r\n    alignItems: \"center\",\r\n  },\r\n  control: {\r\n    margin: 7,\r\n  },\r\n});\r\n\r\nconst SearchBar = ({ columns, dispatch, rows }) => {\r\n  const classes = useSearchBarStyles();\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchColumn, setSearchColumn] = useState(columns[0]);\r\n\r\n  const handleTextFieldChange = (event) => {\r\n    setSearchText(event.target.value);\r\n  };\r\n\r\n  const handleSelectChange = (event) => {\r\n    setSearchColumn(event.target.value);\r\n  };\r\n\r\n  const search = (event) => {\r\n    event.preventDefault();\r\n    dispatch({\r\n      type: \"filter\",\r\n      propertyName: searchColumn,\r\n      payload: searchText,\r\n      rows: rows,\r\n    });\r\n  };\r\n\r\n  const clear = () => {\r\n    setSearchText(\"\");\r\n    dispatch({\r\n      type: \"filter\",\r\n      propertyName: searchColumn,\r\n      payload: \"\",\r\n      rows: rows,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <form onSubmit={search}>\r\n        <IconButton color=\"primary\" onClick={clear}>\r\n          <DeleteOutline />\r\n        </IconButton>\r\n        <TextField\r\n          placeholder=\"Search\"\r\n          color=\"primary\"\r\n          variant=\"standard\"\r\n          onChange={handleTextFieldChange}\r\n          value={searchText}\r\n          className={classes.control}\r\n        />\r\n        <FormControl\r\n          variant=\"standard\"\r\n          color=\"primary\"\r\n          className={classes.control}\r\n        >\r\n          <Select\r\n            value={searchColumn}\r\n            onChange={handleSelectChange}\r\n            displayEmpty\r\n          >\r\n            {columns.map((col, index) => (\r\n              <MenuItem key={index} value={col}>\r\n                {col}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={search}\r\n          className={classes.control}\r\n        >\r\n          Search\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useReducer, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport environment from \"../environment/environment\";\r\nimport CollapsibleTable from \"../utils/CollapsibleTable/Table\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport reducer from \"../reducers/CommonReducer\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nconst useCharacterListStyles = makeStyles({\r\n  content: {\r\n    margin: 25,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n});\r\n\r\nconst createCharacter = (row) => {\r\n  return {\r\n    name: row.name,\r\n    status: row.status,\r\n    species: row.species,\r\n    type: row.type,\r\n    gender: row.gender,\r\n    origin: row.origin.name,\r\n    location: row.location.name,\r\n    image: row.image,\r\n    created: new Date(row.created).toDateString(),\r\n  };\r\n};\r\n\r\nconst columns = [\r\n  \"name\",\r\n  \"status\",\r\n  \"species\",\r\n  \"gender\",\r\n  \"origin\",\r\n  \"location\",\r\n  \"created\",\r\n];\r\n\r\nconst CharacterList = () => {\r\n  const classes = useCharacterListStyles();\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [characterList, dispatch] = useReducer(reducer, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${environment.baseUrl}/character`)\r\n      .then((response) => {\r\n        let data = response.data.results.map((character) =>\r\n          createCharacter(character)\r\n        );\r\n        setRows(data);\r\n        dispatch({ type: \"append\", payload: data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <SearchBar columns={columns} dispatch={dispatch} rows={rows} />\r\n      <CollapsibleTable\r\n        columns={columns}\r\n        rows={characterList}\r\n      ></CollapsibleTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","import React, { useEffect, useReducer, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport environment from \"../environment/environment.json\";\r\nimport CollapsibleTable from \"../utils/CollapsibleTable/Table\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport reducer from '../reducers/CommonReducer';\r\nimport SearchBar from './SearchBar';\r\n\r\nconst useLocationListStyles = makeStyles({\r\n  content: {\r\n    margin: 25,\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n});\r\n\r\nconst createLocation = (row) => {\r\n  return {\r\n    name: row.name,\r\n    type: row.type,\r\n    dimension: row.dimension,\r\n    created: new Date(row.created).toDateString(),\r\n  };\r\n};\r\n\r\nconst columns = [\"name\", \"type\", \"dimension\", \"created\"];\r\n\r\nconst LocationList = () => {\r\n  const classes = useLocationListStyles();\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n    const [locationList, dispatch] = useReducer(reducer, []);\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${environment.baseUrl}/location`)\r\n      .then((response) => {\r\n        let data = response.data.results.map((location) => createLocation(location));\r\n        setRows(data);\r\n        dispatch({ type: 'append', payload: data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <SearchBar columns={columns} dispatch={dispatch} rows={rows} />\r\n      <CollapsibleTable\r\n        columns={columns}\r\n        rows={locationList.map((location) => createLocation(location))}\r\n      ></CollapsibleTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationList;\r\n","import React, { useState, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport environment from \"../environment/environment\";\r\nimport CollapsibleTable from \"../utils/CollapsibleTable/Table\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport reducer from \"../reducers/CommonReducer\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nconst useEpisodeListStyles = makeStyles({\r\n  content: {\r\n    margin: 25,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n});\r\n\r\nconst createEpisode = (row) => {\r\n  return {\r\n    name: row.name,\r\n    air_date: row.air_date,\r\n    episode: row.episode,\r\n    created: new Date(row.created).toDateString(),\r\n  };\r\n};\r\n\r\nconst columns = [\"name\", \"air_date\", \"episode\", \"created\"];\r\n\r\nconst EpisodeList = () => {\r\n  const classes = useEpisodeListStyles();\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [episodeList, dispatch] = useReducer(reducer, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${environment.baseUrl}/episode`)\r\n      .then((response) => {\r\n        let data = response.data.results.map((episode) =>\r\n          createEpisode(episode)\r\n        );\r\n        setRows(data);\r\n        dispatch({ type: \"append\", payload: data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <SearchBar columns={columns} dispatch={dispatch} rows={rows} />\r\n      <CollapsibleTable\r\n        columns={columns}\r\n        rows={episodeList.map((episode) => createEpisode(episode))}\r\n      ></CollapsibleTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EpisodeList;\r\n","import \"./App.css\";\r\nimport theme from \"./theming/default.theme.js\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport NoMatch from \"./components/NoMatch\";\r\nimport CharacterList from \"./components/CharacterList\";\r\nimport LocationList from \"./components/LocationList\";\r\nimport EpisodeList from \"./components/EpisodeList\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/Rick-and-Morty\">\r\n            <Redirect to=\"/character\" />\r\n          </Route>\r\n          <Route path=\"/character\" component={CharacterList} />\r\n          <Route path=\"/location\" component={LocationList} />\r\n          <Route path=\"/episode\" component={EpisodeList} />\r\n\r\n          <Route component={NoMatch} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}